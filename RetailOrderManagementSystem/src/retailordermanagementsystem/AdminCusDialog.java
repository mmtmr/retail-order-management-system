/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package retailordermanagementsystem;

import java.time.LocalDate;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import static retailordermanagementsystem.Operation.ProList;
import static retailordermanagementsystem.Operation.opCus;
import static retailordermanagementsystem.Validation.validateCustomerInput;

/**
 *
 * @author Maxine
 */
public class AdminCusDialog extends javax.swing.JDialog {

    /**
     * Creates new form AdminCusDialog
     */
    public AdminCusDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tab = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        panelAdminProductList = new javax.swing.JPanel();
        labelTitleProduct = new javax.swing.JLabel();
        textSearchPro = new javax.swing.JTextField();
        tabbedPaneMall = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableProList = new javax.swing.JTable();
        jScrollPane19 = new javax.swing.JScrollPane();
        tableProFoodList = new javax.swing.JTable();
        jScrollPane20 = new javax.swing.JScrollPane();
        tableProFashionList = new javax.swing.JTable();
        jScrollPane21 = new javax.swing.JScrollPane();
        tableProOtherList = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableProStationeryList = new javax.swing.JTable();
        buttonAddToCart = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        panel = new javax.swing.JPanel();
        labelTotal = new javax.swing.JLabel();
        labelTotalQuantity = new javax.swing.JLabel();
        buttonDelete1 = new javax.swing.JButton();
        labelTota = new javax.swing.JLabel();
        labelTitle2 = new javax.swing.JLabel();
        buttonCheckout = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableShoppingCart = new javax.swing.JTable();
        buttonModify = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tab.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tab.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabStateChanged(evt);
            }
        });

        jPanel3.setLayout(new java.awt.BorderLayout());

        labelTitleProduct.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelTitleProduct.setText("Overcook Mall");
        labelTitleProduct.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        textSearchPro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textSearchPro.setText("Press enter to search");
        textSearchPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSearchProActionPerformed(evt);
            }
        });

        tabbedPaneMall.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabbedPaneMallStateChanged(evt);
            }
        });

        tableProList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Category", "Name", "Price", "Model", "Stock", "Weight", "Fragile", "Supplier"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProList.setShowGrid(true);
        tableProList.setShowVerticalLines(true);
        jScrollPane2.setViewportView(tableProList);

        tabbedPaneMall.addTab("All", jScrollPane2);

        tableProFoodList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Category", "Name", "Price", "Model", "Stock", "Weight", "Fragile", "Supplier"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProFoodList.setShowGrid(true);
        jScrollPane19.setViewportView(tableProFoodList);

        tabbedPaneMall.addTab("Food", jScrollPane19);

        tableProFashionList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Category", "Name", "Price", "Model", "Stock", "Weight", "Fragile"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProFashionList.setShowGrid(true);
        jScrollPane20.setViewportView(tableProFashionList);

        tabbedPaneMall.addTab("Fashion", jScrollPane20);

        tableProOtherList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Category", "Name", "Price", "Model", "Stock", "Weight", "Fragile", "Supplier"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProOtherList.setShowGrid(true);
        jScrollPane21.setViewportView(tableProOtherList);

        tabbedPaneMall.addTab("Other", jScrollPane21);

        tableProStationeryList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Category", "Name", "Price", "Model", "Stock", "Weight", "Fragile", "Supplier"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProStationeryList.setShowGrid(true);
        jScrollPane3.setViewportView(tableProStationeryList);

        tabbedPaneMall.addTab("Stationery", jScrollPane3);

        buttonAddToCart.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        buttonAddToCart.setText("Add To Cart");
        buttonAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddToCartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAdminProductListLayout = new javax.swing.GroupLayout(panelAdminProductList);
        panelAdminProductList.setLayout(panelAdminProductListLayout);
        panelAdminProductListLayout.setHorizontalGroup(
            panelAdminProductListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminProductListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdminProductListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabbedPaneMall, javax.swing.GroupLayout.DEFAULT_SIZE, 1360, Short.MAX_VALUE)
                    .addGroup(panelAdminProductListLayout.createSequentialGroup()
                        .addComponent(labelTitleProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textSearchPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonAddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        panelAdminProductListLayout.setVerticalGroup(
            panelAdminProductListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminProductListLayout.createSequentialGroup()
                .addGroup(panelAdminProductListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAdminProductListLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelAdminProductListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonAddToCart)
                            .addComponent(textSearchPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAdminProductListLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(labelTitleProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tabbedPaneMall, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        jPanel3.add(panelAdminProductList, java.awt.BorderLayout.CENTER);

        tab.addTab("Mall", jPanel3);

        labelTotal.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        labelTotal.setText("jLabel1");

        labelTotalQuantity.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N

        buttonDelete1.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        buttonDelete1.setText("Delete");
        buttonDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDelete1ActionPerformed(evt);
            }
        });

        labelTota.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        labelTota.setText("jLabel1");

        labelTitle2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelTitle2.setText("Shopping Cart");
        labelTitle2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        buttonCheckout.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        buttonCheckout.setText("Checkout");
        buttonCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCheckoutActionPerformed(evt);
            }
        });

        tableShoppingCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Category", "Name", "Model", "Quantity", "Price", "Packing Charge"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableShoppingCart.setShowGrid(true);
        jScrollPane4.setViewportView(tableShoppingCart);

        buttonModify.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        buttonModify.setText("Modify");
        buttonModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonModifyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(labelTitle2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonCheckout)
                        .addGap(18, 18, 18)
                        .addComponent(buttonModify)
                        .addGap(18, 18, 18)
                        .addComponent(buttonDelete1))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 823, Short.MAX_VALUE))
                .addGap(41, 41, 41)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelTotalQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTota, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonDelete1)
                        .addComponent(buttonCheckout)
                        .addComponent(buttonModify))
                    .addComponent(labelTitle2))
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(labelTotalQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(labelTota, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(labelTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                        .addGap(135, 135, 135))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4))))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tab.addTab("Shopping Cart", jPanel9);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1479, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(tab)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 656, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(tab)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textSearchProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSearchProActionPerformed
        JScrollPane scrollRef = (JScrollPane) tabbedPaneMall.getSelectedComponent();
        JTable table = (JTable) scrollRef.getViewport().getComponent(0);
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        String key = textSearchPro.getText();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(model);
        sorter.setRowFilter(RowFilter.regexFilter(".*" + Pattern.quote(key) + ".*"));
        table.setRowSorter(sorter);
    }//GEN-LAST:event_textSearchProActionPerformed

    private void tabbedPaneMallStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbedPaneMallStateChanged
        showProductList();
    }//GEN-LAST:event_tabbedPaneMallStateChanged

    private void buttonAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddToCartActionPerformed
        JScrollPane scrollRef = (JScrollPane) tabbedPaneMall.getSelectedComponent();
        JTable table = (JTable) scrollRef.getViewport().getComponent(0);
        try {
            String proID = (table.getModel().getValueAt(table.getSelectedRow(), 0).toString());
            AddOrderItemDialog addOrderItemDialog = new AddOrderItemDialog(null, true, Product.searchProFromID(proID));
            addOrderItemDialog.show();
            showProductList();
            showShoppingCartList();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_buttonAddToCartActionPerformed

    private void buttonDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDelete1ActionPerformed
        try {
            int del = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this order item?", "Delete", JOptionPane.YES_NO_OPTION);
            if (del == 0) {
                String oiID = (tableShoppingCart.getModel().getValueAt(tableShoppingCart.getSelectedRow(), 0).toString());
                OrderItem oi = OrderItem.searchOIFromID(oiID);
                Operation.destroyOrderItem(oi);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            showProductList();
            showShoppingCartList();
        }
    }//GEN-LAST:event_buttonDelete1ActionPerformed

    private void buttonCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCheckoutActionPerformed
        try {
            //DefaultTableModel model =  (DefaultTableModel)tableCusList.getModel();
            OrderConfirmationDialog orderConfirmationDialog = new OrderConfirmationDialog(null, true);
            orderConfirmationDialog.show();
            showShoppingCartList();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_buttonCheckoutActionPerformed

    private void buttonModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonModifyActionPerformed
        try {
            String oiID = (tableShoppingCart.getModel().getValueAt(tableShoppingCart.getSelectedRow(), 0).toString());
            //DefaultTableModel model =  (DefaultTableModel)tableCusList.getModel();
            ModifyOrderItemDialog modifyOrderItemDialog = new ModifyOrderItemDialog(null, true, OrderItem.searchOIFromID(oiID));
            modifyOrderItemDialog.show();
            showProductList();
            showShoppingCartList();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_buttonModifyActionPerformed

    private void tabStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabStateChanged
        if (tab.getTitleAt(tab.getSelectedIndex()).contains("Mall")) {
            showProductList();
        }
    }//GEN-LAST:event_tabStateChanged

    public void showProductList() {
        //DefaultTableModel model = new DefaultTableModel(new Object[]{"Account ID", "Account Name", "First Name","Last Name","Gender","D.O.B.","Reward Point","Phone","Email","Street","City","State","Postcode"}, 0);;
        JScrollPane scrollRef = (JScrollPane) tabbedPaneMall.getSelectedComponent();
        JTable table = (JTable) scrollRef.getViewport().getComponent(0);
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int i = 0;
        model.setRowCount(0);
        for (Product pro : ProList) {
            //https://stackoverflow.com/questions/20012772/how-to-populate-a-jtable-from-an-arraylist
            //System.out.println(cus);
            for (ProModel pm : pro.getProModels()) {
                switch (pro.getProCategory()) {
                    case Stationery:
                        if (tabbedPaneMall.getTitleAt(tabbedPaneMall.getSelectedIndex()).contains("All") || tabbedPaneMall.getTitleAt(tabbedPaneMall.getSelectedIndex()).contains("Stationery")) {
                            model.addRow(new Object[]{pro.getProID(), pro.getProCategory(), pro.getProName(), pro.getProPrice(), pm.getPMName(), pm.getPMStock(), pro.getProWeight(), pro.isProFragile(), Supplier.searchSupFromProID(pro.getProID()).getSupName()});
                        }
                        break;
                    case Food:
                        if (tabbedPaneMall.getTitleAt(tabbedPaneMall.getSelectedIndex()).contains("All") || tabbedPaneMall.getTitleAt(tabbedPaneMall.getSelectedIndex()).contains("Food")) {
                            model.addRow(new Object[]{pro.getProID(), pro.getProCategory(), pro.getProName(), pro.getProPrice(), pm.getPMName(), pm.getPMStock(), pro.getProWeight(), pro.isProFragile(), Supplier.searchSupFromProID(pro.getProID()).getSupName()});
                        }
                        break;
                    case Fashion:
                        if (tabbedPaneMall.getTitleAt(tabbedPaneMall.getSelectedIndex()).contains("All") || tabbedPaneMall.getTitleAt(tabbedPaneMall.getSelectedIndex()).contains("Fashion")) {
                            model.addRow(new Object[]{pro.getProID(), pro.getProCategory(), pro.getProName(), pro.getProPrice(), pm.getPMName(), pm.getPMStock(), pro.getProWeight(), pro.isProFragile(), Supplier.searchSupFromProID(pro.getProID()).getSupName()});
                        }
                        break;
                    case Other:
                        if (tabbedPaneMall.getTitleAt(tabbedPaneMall.getSelectedIndex()).contains("All") || tabbedPaneMall.getTitleAt(tabbedPaneMall.getSelectedIndex()).contains("Other")) {
                            model.addRow(new Object[]{pro.getProID(), pro.getProCategory(), pro.getProName(), pro.getProPrice(), pm.getPMName(), pm.getPMStock(), pro.getProWeight(), pro.isProFragile(), Supplier.searchSupFromProID(pro.getProID()).getSupName()});
                        }
                        break;
                }

            }
        }
        table.setModel(model);

    }

    
    public void showShoppingCartList() {
        DefaultTableModel model = (DefaultTableModel) tableShoppingCart.getModel();
        int i = 0;
        model.setRowCount(0);
        int quantity=0;
        double subtotalprice=0.00;
        double subtotalpacking=0.00;
        for (OrderItem oi : opCus.getCusAccount().getCusSC().getOrdItems()) {
            model.addRow(new Object[]{oi.getOIID(), oi.getProCategory(), oi.getProName(), oi.getOIModel(), oi.getOIQuantity(), oi.getOIPrice(), oi.getOIPackingCharge()});
            quantity+=1;
            subtotalprice+=oi.getOIPrice();
            subtotalpacking+=oi.getOIPackingCharge();
        }
        labelTotalQuantity.setText(quantity+" Item(s)");
        labelTota.setText("Cost "+subtotalprice+"& Packing"+subtotalpacking);
        labelTotal.setText("Total of "+subtotalprice+subtotalpacking);
        tableShoppingCart.setModel(model);

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminCusDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminCusDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminCusDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminCusDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AdminCusDialog dialog = new AdminCusDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddToCart;
    private javax.swing.JButton buttonCheckout;
    private javax.swing.JButton buttonDelete1;
    private javax.swing.JButton buttonModify;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel labelTitle2;
    private javax.swing.JLabel labelTitleProduct;
    private javax.swing.JLabel labelTota;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JLabel labelTotalQuantity;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panelAdminProductList;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JTabbedPane tabbedPaneMall;
    private javax.swing.JTable tableProFashionList;
    private javax.swing.JTable tableProFoodList;
    private javax.swing.JTable tableProList;
    private javax.swing.JTable tableProOtherList;
    private javax.swing.JTable tableProStationeryList;
    private javax.swing.JTable tableShoppingCart;
    private javax.swing.JTextField textSearchPro;
    // End of variables declaration//GEN-END:variables
}
